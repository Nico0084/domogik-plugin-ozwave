{
    "products" : [
        {
            "name" : "Z-Stick S2",
            "id" : "ctrl_aeon_stick2",
            "documentation" : "http://aeotec.com/z-wave-usb-stick",
            "type": "ozwave.primary_controller"
        }, {
            "name" : "FGS211 Relay 3kW",
            "id" : "FGS211_Relay",
            "documentation" : "http://www.fibaro.com/en/support",
            "type": "ozwave.switch__switch"
        }, {
            "name" : "FGS221 Double Relay Switch 2x1,5kW",
            "id" : "FGS221_Double_Relay",
            "documentation" : "http://www.fibaro.com/en/support",
            "type": "ozwave.switch__switch"
        }, {
            "name" : "HSM02 Mini Door-Window Detector",
            "documentation" : "http://www.everspring.com/Products/SecuritySystem/HSM02.aspx",
            "id" : "HSM02",
            "type": "ozwave.alarm-str-report_battery-level_opening-sensor"
        }, {
            "name" : "ZME_KFOB 4 Button Key Fob",
            "id" : "ZME_KFOB",
            "documentation" : "http://www.z-wave.me/index.php?id=31",
            "type": "ozwave.battery-level_level__bright_dim"
        }, {
            "name" : "Home Energy Meter 3 phases",
            "id" : "HEM_3p",
            "documentation" : "http://aeotec.com/z-wave-home-energy-measure",
            "type": "ozwave.energy_energy-k_power"
        }, {
            "name" : "Home Energy Meter 1 phases",
            "id" : "HEM_1p",
            "documentation" : "http://aeotec.com/z-wave-home-energy-measure",
            "type": "ozwave.energy_energy-k_power"
        }, {
            "name" : "HSM100 Wireless Multi-Sensor",
            "id" : "HSM100",
            "documentation" : "http://www.homeseer.com/company/releases/07-07-HSM100.htm",
            "type": "ozwave.battery-level_humidity_temperature-c"
        }, {
            "name" : "AN158 Plug-in Meter Appliance Module",
            "id" : "AN158",
            "documentation" : "http://www.everspring.com/Products/HomeAutomation/AN158.aspx",
            "type": "ozwave.energy-k_energy-previous-reading-k_power_switch__switch"
        }, {
            "name" : "FGWPE Wall Plug",
            "id" : "FGWPE_Wall_Plug",
            "documentation" : "http://www.fibaro.com/en/support",
            "type": "ozwave.energy-k_power_switch__switch"
        }, {
            "name" : "ST814 Temperature and Humidity Sensor",
            "id" : "ST814",
            "documentation" : "http://www.everspring.com/Products/HomeAutomation/ST814.aspx",
            "type": "ozwave.battery-level_humidity_relative-humidity_temperature-c"
        }, {
            "name" : "SF812 Smoke Alarm",
            "id" : "SF812",
            "documentation" : "http://www.everspring.com/Products/HomeAutomation/SF812.aspx",
            "type": "ozwave.battery-level_low-battery_sensor-alarm_tamper-event"
        }, {
            "name" : "Danfoss living connect",
            "id" : "014G0013",
            "documentation" : "http://fr.cd.danfoss.com/xxTypex/585933.html",
            "type": "ozwave.battery-level_thermostat-setpoint-c__thermostat-setpoint-c"
        }, {
            "name" : "Fibaro motion sensor",
            "id" : "FGMS001",
            "documentation" : "http://www.fibaro.com/en/the-fibaro-system/motion-sensor",
            "type": "ozwave.battery-level_binary-sensor_luminance_temperature-c"
        }, {
            "name" : "Fibaro door opening sensor",
            "id" : "FGK101",
            "documentation" : "http://www.fibaro.com/en/the-fibaro-system/door-window-sensor",
            "type": "ozwave.battery-level_opening-sensor"
        }, {
            "name" : "PSM02-1 Slim Multi-Sensor",
            "id" : "PSM02",
            "documentation" : "http://wiki.zipato.com/wiki/Multisensor_Trio",
            "type": "ozwave.battery-level_door-window-sensor_luminance_motion-sensor-binary_tamper-sensor_temperature-c"
        }, {
            "name" : "FGFS-101 Fibaro Flood Sensor",
            "id" : "FGFS101",
            "documentation" : "http://www.fibaro.com/en/the-fibaro-system/flood-sensor",
            "type": "ozwave.battery-level_binary-sensor_flood-alarm_motion-sensor-level_temperature-c"
        }, {
            "name" : "FGSD002 Fibaro Smoke Sensor",
            "id" : "FGSD002",
            "documentation" : "http://www.fibaro.com/en/system-fibaro/smoke-sensor-en",
            "type": "ozwave.battery-level_sensor-alarm_temperature-c"
        }
    ],
    "configuration" : [{
            "key": "autoconfpath",
            "name": "Auto openzwave lib path detection",
            "description" : "Set to True for openzwave configuration path auto detection, else use configpath. [default : True]",
            "default" : true,
            "required": true,
            "type" : "boolean"
        },{
            "key" : "configpath",
            "name": "Openzwave Configuration Path",
            "description" : "Path for openzwave files configuration (see your openzwave installation).",
            "default" : "/usr/local/lib/python2.7/dist-packages/libopenzwave-0.3.0b7-py2.7-linux-x86_64.egg/config",
            "required": true,
            "type" : "string"
        },{
            "key" : "cpltmsg",
            "name" : "Send complet message",
            "description" : "Message complet confirmation send as notification (see doc to use it at True). [default : false]",
            "default" : false,
            "required": true,
            "type" : "boolean"
        },{
            "key" : "ozwlog",
            "name": "Enable openzwave log",
            "description" : "Active openzwave log (see file OZW_Log.txt in User path). WARNING file not in rotate mode, file should beging ernormous ! [default : false]",
            "default" : false,
            "required": true,
            "type" : "boolean"
        }
    ],
    "xpl_commands" : {},
    "xpl_stats": {},
    "sensors" : {
        "ctrl-status" : {
            "name" : "Controler status",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": false,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "node-status" : {
            "name" : "Node status",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": false,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "battery-level" : {
            "name" : "Battery level",
            "incremental": false,
            "data_type" : "DT_Battery",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "low-battery" : {
            "name" : "low battery",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "power-applied" : {
            "name" : "Power Applied",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "power-failure" : {
            "name" : "Power failure",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "temperature-c" : {
            "name" : "Temperature",
            "incremental": false,
            "data_type" : "DT_Temp",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "temperature-k" : {
            "name" : "Temperature",
            "incremental": false,
            "data_type" : "DT_TempK",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "temperature-f" : {
            "name" : "Temperature",
            "incremental": false,
            "data_type" : "DT_TempF",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "humidity" : {
            "name" : "Humidity",
            "incremental": false,
            "data_type" : "DT_Humidity",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "relative-humidity" : {
            "name" : "Relative humidity",
            "incremental": false,
            "data_type" : "DT_Humidity",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "luminance" : {
            "name" : "Luminance",
            "incremental": false,
            "data_type" : "DT_Scaling",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "level" : {
            "name" : "Level",
            "incremental": false,
            "data_type" : "DT_Number",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "opening-sensor" : {
            "name" : "Sensor",
            "incremental": false,
            "data_type" : "DT_OpenClose",
            "conversion" : "from_Opening_Sensor_to_DT_OpenClose",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "door-window-sensor" : {
            "name" : "Door/Window Sensor",
            "incremental": false,
            "data_type" : "DT_OpenClose",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "binary-sensor" : {
            "name" : "Sensor",
            "incremental": false,
            "data_type" : "DT_Bool",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "motion-sensor-binary" : {
            "name" : "Motion Sensor",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "motion-sensor-level" : {
            "name" : "General",
            "incremental": false,
            "data_type" : "DT_Number",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "tamper-sensor" : {
            "name" : "Tamper sensor",
            "incremental": false,
            "data_type" : "DT_OpenClose",
            "conversion" : "from_Tamper_Event_to_DT_OpenClose",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "status" : {
            "name" : "Status",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "power" : {
            "name" : "Power",
            "incremental": false,
            "data_type" : "DT_Power",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "power-m" : {
            "name" : "Power",
            "incremental": false,
            "data_type" : "DT_mPower",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "power-k" : {
            "name" : "Power",
            "incremental": false,
            "data_type" : "DT_kPower",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy" : {
            "name" : "Energy",
            "incremental": true,
            "data_type" : "DT_ActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-m" : {
            "name" : "Energy",
            "incremental": true,
            "data_type" : "DT_mActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-k" : {
            "name" : "Energy",
            "incremental": true,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-previous-reading" : {
            "name" : "Previous reading",
            "incremental": true,
            "data_type" : "DT_ActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-previous-reading-m" : {
            "name" : "Previous reading",
            "incremental": true,
            "data_type" : "DT_mActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-previous-reading-k" : {
            "name" : "Previous reading",
            "incremental": true,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-production-k" : {
            "name" : "Energy production",
            "incremental": false,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "instant-energy-production-k" : {
            "name" : "Instant energy production",
            "incremental": false,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "total-energy-production-k" : {
            "name" : "Total energy production",
            "incremental": false,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "energy-production-today-k" : {
            "name" : "Energy production today",
            "incremental": false,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "total-production-time-k" : {
            "name" : "Total production time",
            "incremental": false,
            "data_type" : "DT_kActiveEnergy",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "counter" : {
            "name" : "Count",
            "incremental": true,
            "data_type" : "DT_Number",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "indicator-str" : {
            "name" : "Indicator",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "locked-state" : {
            "name" : "Locked",
            "incremental": false,
            "data_type" : "DT_State",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "alarm-str-report" : {
            "name" : "Alarm Report",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": true,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "tamper-event" : {
            "name" : "Tamper event",
            "incremental": false,
            "data_type" : "DT_OpenClose",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "sensor-alarm" : {
            "name" : "Alarm",
            "incremental": false,
            "data_type" : "DT_String",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "power-management-alarm" : {
            "name" : "Power Management",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "smoke-alarm" : {
            "name" : "smoke",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "carbonmonoxide-alarm" : {
            "name" : "Carbonmonoxide",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "carbondioxide-alarm" : {
            "name" : "Carbondioxide",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "heat-alarm" : {
            "name" : "heat",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "flood-alarm" : {
            "name" : "flood",
            "incremental": false,
            "data_type" : "DT_Binary",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "switch" : {
            "name" : "Switch",
            "incremental": false,
            "data_type" : "DT_Switch",
            "conversion" : "from_switch_to_DT_Switch",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "fan-mode" : {
            "name" : "Fan mode",
            "incremental": false,
            "data_type" : "DT_HVACVent",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "fan-state" : {
            "name" : "Fan state",
            "incremental": false,
            "data_type" : "DT_HVACFan",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "thermostat-mode" : {
            "name" : "mode",
            "incremental": false,
            "data_type" : "DT_HVACMode",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "thermostat-operating-state" : {
            "name" : "Operating state",
            "incremental": false,
            "data_type" : "DT_HVACVent",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "thermostat-setpoint-c" : {
            "name" : "Setpoint",
            "incremental": false,
            "data_type" : "DT_Temp",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "thermostat-setpoint-f" : {
            "name" : "Setpoint",
            "incremental": false,
            "data_type" : "DT_TempF",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        },
        "thermostat-setpoint-k" : {
            "name" : "Setpoint",
            "incremental": false,
            "data_type" : "DT_TempK",
            "conversion" : "",
            "timeout": 0,
            "history": {
                    "store": true,
                    "duplicate": false,
                    "max": 0,
                    "expire": 0,
                    "round_value": 0
            }
        }
    },
    "commands" : {
        "switch" : {
            "name" : "Switch On-Off",
            "return_confirmation" : true,
            "parameters" : [{
                    "key" : "switch",
                    "data_type" : "DT_Switch",
                    "conversion" : ""
                }
            ]
        },
        "toggle-switch-binary" : {
            "name" : "Switch On-Off",
            "return_confirmation" : true,
            "parameters" : [{
                    "key" : "Toggle switch",
                    "data_type" : "DT_Switch",
                    "conversion" : ""
                }
            ]
        },
        "increase" : {
            "name" : "Increase button",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Inc",
                    "data_type" : "DT_Bool",
                    "conversion" : ""
                }
            ]
        },
        "decrease" : {
            "name" : "Decrease button",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Dec",
                    "data_type" : "DT_Bool",
                    "conversion" : ""
                }
            ]
        },
        "bright" : {
            "name" : "Bright button",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Bright",
                    "data_type" : "DT_Bool",
                    "conversion" : ""
                }
            ]
        },
        "dim" : {
            "name" : "Dim button",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Dim",
                    "data_type" : "DT_Bool",
                    "conversion" : ""
                }
            ]
        },
        "fan-mode" : {
            "name" : "Fan mode select",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Fan mode",
                    "data_type" : "DT_HVACVent",
                    "conversion" : ""
                }
            ]
        },
        "fan-state" : {
            "name" : "Fan state select",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Fan state",
                    "data_type" : "DT_HVACFan",
                    "conversion" : ""
                }
            ]
        },
        "thermostat-mode" : {
            "name" : "Thermostat mode select",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Mode",
                    "data_type" : "DT_HVACMode",
                    "conversion" : ""
                }
            ]
        },
        "thermostat-operating-state" : {
            "name" : "Thermostat oprerating mode",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Operating state",
                    "data_type" : "DT_HVACVent",
                    "conversion" : ""
                }
            ]
        },
        "thermostat-setpoint-c" : {
            "name" : "Thermostat setpoint",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Setpoint",
                    "data_type" : "DT_Temp",
                    "conversion" : ""
                }
            ]
        },
        "thermostat-setpoint-f" : {
            "name" : "Thermostat setpoint",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Setpoint",
                    "data_type" : "DT_TempF",
                    "conversion" : ""
                }
            ]
        },
        "thermostat-setpoint-k" : {
            "name" : "Thermostat setpoint",
            "return_confirmation" : false,
            "parameters" : [{
                    "key" : "Setpoint",
                    "data_type" : "DT_TempK",
                    "conversion" : ""
                }
            ]
        }
    },
    "device_types": {
        "ozwave.primary_controller" :{
            "description": "Primary Controller of your zwave network",
            "id": "ozwave.primary_controller",
            "name": "Zwave Controller",
            "commands": [],
            "sensors": ["ctrl-status"],
            "parameters" : [{
                "key" : "driver",
                "xpl": false,
                "description" : "Z-wave device from os. [eg. : /dev/zwave]",
                "type" : "string"
            },{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name to replace Home ID for easier of nodes addressing. [e.g. : MyHomeId]",
                "type" : "string"
            }]
        },
        "ozwave.node" :{
            "description" : "Zwave Node himself (retreive it status not feature(s))",
            "id": "ozwave.node",
            "name" : "Node",
            "commands": [],
            "sensors": ["node-status"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.switch__switch" :{
            "description" : "A simple switch",
            "id": "ozwave.switch__switch",
            "name" : "Simple Switch",
            "commands": ["switch"],
            "sensors": ["switch"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.energy-k_power_switch__switch" :{
            "description" : "Switch with power, energy meter",
            "id": "ozwave.energy-k_power_switch__switch",
            "name" : "Switch Power meter/Energy",
            "commands": ["switch"],
            "sensors": ["switch", "energy-k", "power"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.energy-k_energy-previous-reading-k_power_switch__switch" :{
            "description" : "Switch with power, energy meter (and previous value)",
            "id": "ozwave.energy-k_energy-previous-reading-k_power_switch__switch",
            "name" : "Switch Power meter/Energy/Previous",
            "commands": ["switch"],
            "sensors": ["switch", "energy-k", "energy-previous-reading-k", "power"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.power-failure_switch__switch" :{
            "description" : "A simple switch with power failure detection",
            "id": "ozwave.power-failure_switch__switch",
            "name" : "Switch with power failure",
            "commands": ["switch"],
            "sensors": ["switch", "power-failure"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.power-failure_switch__switch" :{
            "description" : "A simple switch with power failure detection",
            "id": "ozwave.power-failure_switch__switch",
            "name" : "Switch with power failure",
            "commands": ["switch"],
            "sensors": ["switch", "power-failure"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.power-management-alarm_switch__switch" :{
            "description" : "A simple switch with power management detection",
            "id": "ozwave.power-management-alarm_switch__switch",
            "name" : "Switch with power failure",
            "commands": ["switch"],
            "sensors": ["switch", "power-management-alarm"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.battery-level_opening-sensor" :{
            "description" : "Opening sensor (battery)",
            "id": "ozwave.battery-level_opening-sensor",
            "name" : "Sensor Opening (battery)",
            "commands": [],
            "sensors": ["opening-sensor", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.alarm-str-report_battery-level_opening-sensor" :{
            "description" : "Opening sensor with tamper,low battery and power applied alarm (battery)",
            "id": "ozwave.alarm-str-report_battery-level_opening-sensor",
            "name" : "Sensor Opening/Power applied/Tamper event(battery)",
            "commands": [],
            "sensors": ["opening-sensor", "battery-level", "alarm-str-report"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.temperature-c" :{
            "description" : "Temperature sensor",
            "id": "ozwave.temperature-c",
            "name" : "Sensor Temperature",
            "commands": [],
            "sensors": ["temperature-c"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.battery-level_temperature-c" :{
            "description" : "Temperature sensor with battery",
            "id": "ozwave.battery-level_temperature-c",
            "name" : "Sensor Temperature (battery)",
            "commands": [],
            "sensors": ["temperature-c", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_humidity_temperature-c" :{
            "description" : "Temperature sensor with humidity (battery)",
            "id": "ozwave.battery-level_humidity_temperature-c",
            "name" : "Sensor Temperature/Humidity (battery)",
            "commands": [],
            "sensors": ["temperature-c", "humidity", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.humidity_temperature-c" :{
            "description" : "Temperature sensor with humidity",
            "id": "ozwave.humidity_temperature-c",
            "name" : "Sensor Temperature/Humidity",
            "commands": [],
            "sensors": ["temperature-c", "humidity"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.battery-level_humidity_relative-humidity_temperature-c" :{
            "description" : "Temperature sensor with humidity and relative humidity (battery)",
            "id": "ozwave.battery-level_humidity_relative-humidity_temperature-c",
            "name" : "Sensor Temperature/humidity/relative (battery)",
            "commands": [],
            "sensors": ["temperature-c", "humidity", "relative-humidity", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.humidity_relative-humidity_temperature-c" :{
            "description" : "Temperature sensor with humidity and relative humidity",
            "id": "ozwave.humidity_relative-humidity_temperature-c",
            "name" : "Sensor Temperature/humidity/relative",
            "commands": [],
            "sensors": ["temperature-c", "humidity", "relative-humidity"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.battery-level_level__bright_dim" :{
            "description" : "Dimmer button (battery)",
            "id": "ozwave.battery-level_level__bright_dim",
            "name" : "Dimmer buttons (battery)",
            "commands": ["bright", "dim"],
            "sensors": ["level", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.level__bright_dim" :{
            "description" : "Dimmer button",
            "id": "ozwave.level__bright_dim",
            "name" : "Dimmer button",
            "commands": ["bright", "dim"],
            "sensors": ["level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.battery-level_energy-k_energy-previous-reading-k_power" :{
            "description" : "Energie meter (battery)",
            "id": "ozwave.battery-level_energy-k_energy-previous-reading-k_power",
            "name" : "Power meter (battery)",
            "commands": [],
            "sensors": ["power", "energy-k", "energy-previous-reading-k", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.energy_energy-k_power" :{
            "description" : "Energie meter",
            "id": "ozwave.energy_energy-k_power",
            "name" : "Power meter",
            "commands": [],
            "sensors": ["power", "energy", "energy-k"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            }]
        },
        "ozwave.battery-level_luminance_motion-sensor-level_temperature-c" :{
            "description" : "Sensor motion 4in1 (battery)",
            "id": "ozwave.battery-level_luminance_motion-sensor-level_temperature-c",
            "name" : "Sensor Motion Level/Temperature/Luminance (battery)",
            "commands": [],
            "sensors": ["motion-sensor-level", "luminance", "temperature-c", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_door-window-sensor_luminance_motion-sensor-binary_tamper-sensor_temperature-c" :{
            "description" : "Motion, (battery)",
            "id": "ozwave.battery-level_door-window-sensor_luminance_motion-sensor-binary_tamper-sensor_temperature-c",
            "name" : "Sensor Motion/Door Window/Temperature/Luminance/Tamper (battery)",
            "commands": [],
            "sensors": ["door-window-sensor", "motion-sensor-binary", "tamper-sensor", "temperature-c", "luminance", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_binary-sensor_flood-alarm_motion-sensor-level_temperature-c" :{
            "description" : "Flood sensor temperature (battery)",
            "id": "ozwave.battery-level_binary-sensor_flood-alarm_motion-sensor-level_temperature-c",
            "name" : "Flood sensor temperature (battery)",
            "commands": [],
            "sensors": ["binary-sensor", "flood-alarm", "temperature-c", "motion-sensor-level", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                                    "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                                    "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                                    "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                                    "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_binary-sensor_luminance_temperature-c" :{
            "description" : "Sensor sensor 4in1 (battery)",
            "id": "ozwave.battery-level_binary-sensor_luminance_temperature-c",
            "name" : "Sensor sensor 4in1 (battery)",
            "commands": [],
            "sensors": ["binary-sensor", "luminance", "temperature-c", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_low-battery_sensor-alarm_tamper-event" :{
            "description" : "Sensor security alarm (battery)",
            "id": "ozwave.battery-level_low-battery_sensor-alarm_tamper-event",
            "name" : "Sensor security alarm (battery)",
            "commands": [],
            "sensors": ["sensor-alarm", "tamper-event","low-battery", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_low-battery_sensor-alarm" :{
            "description" : "Sensor security alarm (battery)",
            "id": "ozwave.battery-level_low-battery_sensor-alarm",
            "name" : "Sensor security alarm (battery)",
            "commands": [],
            "sensors": ["sensor-alarm", "low-battery", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_sensor-alarm_temperature-c" :{
            "description" : "Sensor temperature alarm (battery)",
            "id": "ozwave.battery-level_sensor-alarm_temperature-c",
            "name" : "Sensor temperature alarm (battery)",
            "commands": [],
            "sensors": ["sensor-alarm","temperature-c", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        },
        "ozwave.battery-level_thermostat-setpoint-c__thermostat-setpoint-c" :{
            "description" : "Thermostat with only setpoint (battery)",
            "id": "ozwave.battery-level_thermostat-setpoint-c__thermostat-setpoint-c",
            "name" : "Thermostat (battery)",
            "commands": ["thermostat-setpoint-c"],
            "sensors": ["thermostat-setpoint-c", "battery-level"],
            "parameters" : [{
                "key" : "networkid",
                "xpl": false,
                "description" : "Zwave network name if refered in controller node or Openzwave Home ID",
                "type" : "string"
            },{
                "key" : "node",
                "xpl": false,
                "description" : "Zwave node id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "instance",
                "xpl": false,
                "description" : "Zwave node instance id",
                "type" : "integer",
                "max_value": 255,
                "min_value": 1
            },{
                "key" : "batterycheck",
                "xpl": false,
                "description" : "Check battery level at zwave device wakeup.",
                "type" : "boolean"
            }]
        }
    },
    "identity" : {
        "author" : "Nicolas V.",
        "author_email" : "nico84dev at gmail.com",
        "tags": ["z-wave"],
        "dependencies" : [{
                "id" : "python-openzwave-lib (>=0.3.0)",
                "type" : "python"
            },
            {
                "id": "tailer (>=0.2.1)",
                "type": "python"
            }
        ],
        "description" : "Z-Wave is a wireless ecosystem that lets all your home electronics talk to each other, and to you, via remote control",
        "domogik_min_version" : "0.5.0",
        "name": "ozwave",
        "type" : "plugin",
        "version" : "0.5.1"
    },
    "json_version" : 2
    }
